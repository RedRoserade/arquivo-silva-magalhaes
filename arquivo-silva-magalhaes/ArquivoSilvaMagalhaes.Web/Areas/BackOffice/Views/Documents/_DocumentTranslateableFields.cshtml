@model DocumentTranslation

@Html.HiddenFor(model => model.DocumentId)

@if (ViewBag.AvailableLanguages == null)
{
    @Html.HiddenFor(model => model.LanguageCode)
}
else
{
    <div class="form-group">
        @Html.LabelFor(model => model.LanguageCode, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.LanguageCode, ViewBag.AvailableLanguages as IEnumerable<SelectListItem>, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LanguageCode)
        </div>
    </div>
}

<div class="form-group">
    @Html.LabelFor(model => model.Description, new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DocumentLocation, new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.DocumentLocation, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DocumentLocation)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FieldAndContents, new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.FieldAndContents, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FieldAndContents)
    </div>
</div>
