@model IEnumerable<ArquivoSilvaMagalhaes.Models.SiteModels.TechnicalDocument>

@{
    ViewBag.Title = TechnicalDocumentStrings.EntityNamePlural;
    Layout = "~/Views/Shared/_IndexPageLayout.cshtml";
}

<h2>
    @TechnicalDocumentStrings.EntityNamePlural
</h2>

<hr />

@functions 
{
    /// <summary>
    /// Gets the appropriate glyphicon for the file type.
    /// </summary>
    /// <returns></returns>
    string GlyphIconForMimeType(string mimeType, string fileName = null)
    {
        var regex = new System.Text.RegularExpressions.Regex(".doc(x)?$|.ppt(x)?$|.xls(x)?$");
        
        
        if (mimeType.StartsWith("image/"))
        {
            return "glyphicon-picture";
        }
        else if (mimeType.StartsWith("audio/"))
        {
            return "glyphicon-music";
        }
        else if (mimeType.StartsWith("video/"))
        {
            return "glyphicon-film";
        }
        else if (mimeType == "application/pdf" || regex.IsMatch(fileName))
        {
            return "glyphicon-book";
        }
        else if (mimeType == "application/zip" || fileName.EndsWith(".zip"))
        {
            return "glyphicon-compressed";
        }
            
        return "glyphicon-file";
    }
}

<div class="list-group">
    @foreach (var doc in Model)
    {
        <a class="list-group-item" href="~/Public/TechnicalDocuments/@doc.FileName" target="_blank">
            <div class="media">
                <span class="pull-left afsm-large-glyphicon glyphicon @GlyphIconForMimeType(doc.Format, doc.FileName)">
                </span>
                <div class="media-body">
                    <h4 class="media-heading">@doc.Title</h4>
                    @(Math.Round(doc.FileSize / 1000000.0, 2)) MB
                </div>
            </div>
        </a>
    }
</div>

