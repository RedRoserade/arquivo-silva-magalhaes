@model ImageDetailsViewModel

@{
    ViewBag.Title = Model.Image.Translation.Title;

    var logo = Model.Image.Entity.ImageUrl != null ?
        "Public/Images/" + Model.Image.Entity.ImageUrl + "_thumb.jpg" :
        "Content/Images/no-image.png";
}

<ol class="breadcrumb">
    <li>
        <a href="@Url.Action("Archive", "Home")">
            @LayoutStrings.Contents
        </a>
    </li>

    <li>
        <a href="@Url.Action("Index", "Images", new { documentId = Model.Image.Entity.DocumentId })">
            @ImageStrings.EntityNamePlural
        </a>
    </li>

    <li class="active">
        @Html.Truncate(Model.Image.Translation.Title, 20)
    </li>
</ol>

<div class="row afsm-detail-header">
    <div class="col-sm-4">
        @if (Model.Image.Entity.ImageUrl != null)
        {
            <a href="@Url.Content("~/Public/Images/" + (Model.Image.Entity.ImageUrl) + "_large.jpg")"
               class="thumbnail">
                <img data-afsm-show-overlay="true"
                     data-afsm-target="#afsm-overlay"
                     data-afsm-large-image-url="@Url.Content("~/Public/Images/" + (Model.Image.Entity.ImageUrl) + "_large.jpg")"
                     data-afsm-description="@Html.DisplayFor(modelItem => Model.Image.Translation.Description)"
                     src="~/Public/Images/@(Model.Image.Entity.ImageUrl)_thumb.jpg" />
            </a>

            @section scripts {
                @Html.Partial("_ImageOverlay")
            }
        }
        else
        {
            <img src="~/Content/Images/no-image.png" class="img-responsive" />
        }
    </div>

    <div class="col-sm-8">
        <h3>
            @Model.Image.Translation.Title <small>@Model.Image.Entity.ImageCode</small>
        </h3>

        <dl class="afsm-dl-vertical">

            <dt>
                @(Html.DisplayNameFor(model => model.Image.Entity.ProductionDate))
            </dt>

            <dd>
                @Model.Image.Entity.ProductionDate
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Image.Entity.Document)
            </dt>

            <dd>
                <a href="@Url.Action("Details", "Documents", new { id = Model.Image.Entity.DocumentId })">
                    @Model.Image.Entity.Document.Title
                </a>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Classification.Translation.Value)
            </dt>

            <dd>
                <a target="_blank" href="@Url.Action("Index", "Images", new { classificationId = Model.Classification.Entity.Id })">
                    @Model.Classification.Translation.Value
                </a>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Image.Entity.Keywords)
            </dt>
            <dd>
                <ul class="list-inline">
                    @foreach (var kw in Model.Keywords)
                    {
                        <li>
                            <a target="_blank" href="@Url.Action("Index", "Images", new { keywordId = kw.Entity.Id })">
                                @kw.Translation.Value
                            </a>
                        </li>
                    }
                </ul>



                @*@string.Join(", ", Model.Keywords.Select(k => k.Translation.Value))*@
            </dd>


        </dl>
    </div>
</div>

<hr />

<dl class="afsm-dl-vertical">
    <dt>
        @Html.DisplayNameFor(model => model.Image.Translation.Description)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Image.Translation.Description)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Image.Translation.Subject)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Image.Translation.Subject)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Image.Translation.Publication)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Image.Translation.Publication)
    </dd>
</dl>
