@model IEnumerable<Partnership>

@{
    ViewBag.Title = PartnershipStrings.EntityNamePlural;
}

<h2>
    @PartnershipStrings.EntityNamePlural
</h2>

<hr class="hidden-xs" />

<div data-afsm-ajax="true" data-afsm-id="#afsm-image-list">
    <form method="get"
          class="form-horizontal"
          data-afsm-ajax="true"
          data-afsm-ajaxurl="@Url.Action("List", "Partnerships", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request))"
          action="@Url.Action("Index", "Partnerships", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request))">
        @*<input type="hidden" name="documentId" value="@ViewBag.DocumentId" />*@

    </form>

    <div class="row afsm-dohighlight">
        @foreach (var img in Model)
        {
            <div class="afsm-thumb col-sm-6 col-lg-4">

                <img class="img-responsive" style="height:200px" src="~/Public/Partnerships/@(img.LogoFileName)" />
                <div class="caption">
                    <h5 class="afsm-commentary">
                        <b>
                            @img.Name
                        </b>
                    </h5>
                    <small>
                        @Html.DisplayFor(model => img.EmailAddress)
                    </small><br />
                    <small>
                        <a href="@img.SiteLink" target="_blank">@img.SiteLink</a>
                    </small><br />
                    <small class="text-muted">
                        @img.Contact
                    </small>
                </div>
            </div>
        }
    </div>
    <div class="text-center afsm-pagination">
        @*@Html.PagedListPager((IPagedList)Model, p => Url.Action("Index", "Images", new { pageNumber = p, query = ViewBag.Query, keywordId = ViewBag.KeywordId, classificationId = ViewBag.ClassificationId, documentId = ViewBag.DocumentId, collectionId = ViewBag.CollectionId }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })*@
        @Html.PagedListPager((IPagedList)Model, (p) => Url.Action("Index", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request, new { pageNumber = p })), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
    </div>

</div>


