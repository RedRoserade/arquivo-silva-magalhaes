@model CollectionDetailsViewModel

@{
    ViewBag.Title = Model.Collection.Translation.Title;

    var logo = Model.Collection.Entity.LogoLocation != null ?
        "Public/Collections/" + Model.Collection.Entity.LogoLocation :
        "Content/Images/no-image.png";
}

<h2>
    @Html.Truncate(Model.Collection.Translation.Title, 50)
    &nbsp;<small>@Model.Collection.Entity.CatalogCode</small>
</h2>

<hr />

<ol class="breadcrumb">
    <li>
        <a href="@Url.Action("Index", "Collections")">
            @CollectionStrings.EntityNamePlural
        </a>
    </li>

    <li class="active">
        @Html.Truncate(Model.Collection.Translation.Title, 20)
    </li>
</ol>


<div class="col-sm-4">
    <img src="~/@logo"
         class="img-responsive"
         alt="@Model.Collection.Translation.Title" />
</div>

<div class="col-sm-8">
    <dl>

        <dt>
            @(Html.DisplayNameFor(model => model.Collection.Entity.ProductionPeriod))
        </dt>

        <dd>
            @Model.Collection.Entity.ProductionPeriod
        </dd>

        <dt>
            Autoria de
        </dt>

        <dd>
            @for (var i = 0; i < Model.Authors.Count(); i++)
            {
                var a = Model.Authors[i];

                <a href="@Url.Action("Details", "Authors", new { id = a.Entity.Id })">
                    @(a.Entity.FirstName + " " + a.Entity.LastName)
                </a>

                <span>&nbsp;</span>
            }
        </dd>
    </dl>
</div>

<hr />

<dl>
    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.Description)
    </dt>

    <dd>
        @Html.DisplayMultilineFor(model => model.Collection.Translation.Description)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.AdministrativeAndBiographicStory)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Collection.Translation.AdministrativeAndBiographicStory)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.Provenience)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Collection.Translation.Provenience)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.Dimension)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Collection.Translation.Dimension)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.FieldAndContents)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Collection.Translation.FieldAndContents)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Collection.Translation.CopyrightInfo)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Collection.Translation.CopyrightInfo)
    </dd>
</dl>

@if (Model.Documents.Count > 0)
{
    <h4>
        @DocumentStrings.EntityNamePlural (@(Model.Documents.Count))
        <small>
            @Html.ActionLink("Ver documentos", "Index", "Documents", new { collectionId = Model.Collection.Entity.Id }, null)
        </small>
    </h4>

    <hr />

    <div class="list-group">

        @foreach (var doc in Model.Documents)
        {
            <a href="@Url.Action("Details", "Documents", new { doc.Entity.Id })" class="list-group-item">
                <div class="media">
                    <div class="pull-left">
                        <img class="media-object" style="width: 96px; height: 96px"
                             src="~/Content/Images/no-image.png">
                    </div>
                    <div class="media-body">
                        <h4 class="media-heading">
                            @Html.Truncate(doc.Entity.Title, 60)
                            &nbsp;<small>@doc.Entity.CatalogCode</small>
                        </h4>

                        <dl>
                            <dt>
                                Data:
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => doc.Entity.DocumentDate)
                            </dd>

                            <dt>
                                Local:
                            </dt>
                            <dd>
                                @doc.Translation.DocumentLocation
                            </dd>

                        </dl>

                        <p>
                            @Html.Truncate(doc.Translation.Description, 120)
                        </p>


                    </div>
                </div>
            </a>
        }
    </div>
}

@section scripts {
    <style>
        dl > dt + dd {
            margin-bottom: 15px;
        }

        dl > dt {
            margin-bottom: 5px;
        }
    </style>
}