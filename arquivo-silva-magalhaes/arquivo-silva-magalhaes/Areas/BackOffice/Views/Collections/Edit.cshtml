@model CollectionEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Editar coleção</h2>

@using (Html.BeginForm("Edit", "Collections", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

       @* <div class="form-group">
        @Html.LabelFor(model => model.AvailableAuthors, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.ListBoxFor(model => model.AuthorIds, Model.AvailableAuthors, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AvailableAuthors, "", new { @class = "text-danger" })
        </div>
    </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EnumDropDownListFor(model => model.Type, "Escolha um...", new { @class = "form-control-md-2" })
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InitialProductionDate,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.InitialProductionDate, new { htmlAttributes = new { @class = "form-control-md-2", @Value = Model.InitialProductionDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.InitialProductionDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndProductionDate, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.EndProductionDate, new { htmlAttributes = new { @class = "form-control-md-2", @Value = Model.EndProductionDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.EndProductionDate)
            </div>
        </div>

        <div class ="form-group">
            @Html.LabelFor(model => model.LogoLocation, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.LogoLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogoLocation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasAttachments, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.HasAttachments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HasAttachments)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttachmentsDescriptions, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.AttachmentsDescriptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttachmentsDescriptions)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizationSystem, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.OrganizationSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizationSystem)
            </div>
        </div>

        <div class ="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsVisible, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.IsVisible, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsVisible)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatalogCode, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.CatalogCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CatalogCode)
            </div>
        </div>
        @for (var i = 0; i < Model.Translations.Count; i++)
        {
            @Html.HiddenFor(model => model.Translations[i].LanguageCode)

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Title, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Description, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Provenience, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Provenience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Provenience, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].AdministrativeAndBiographicStory, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].AdministrativeAndBiographicStory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].AdministrativeAndBiographicStory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].FieldAndContents, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].FieldAndContents, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].FieldAndContents, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Dimension, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Dimension, new { htmlAttributes = new { @class = "form-control-md-2" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Dimension, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].CopyrightInfo, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].CopyrightInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].CopyrightInfo, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    </div>
    @Html.Partial("_SubmitBackPartial")
}

