@model CollectionEditViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Criar nova coleção</h2>

@using (Html.BeginForm("Create", "Collections", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableAuthors, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.ListBoxFor(model => model.AuthorIds, Model.AvailableAuthors, new{ htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.AvailableAuthors, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EnumDropDownListFor(model => model.Type, "Escolha um...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class="text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductionDate,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.ProductionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductionDate,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoLocation,htmlAttributes: new { @class = "control-label" })
            <div>
                <input type="file" name="@Html.NameFor(model => model.Logo)" required data-val-required="É necessário escolher um ficheiro de imagem." id="@Html.NameFor(model => model.Logo)" accept="image/*" />
                @Html.ValidationMessageFor(model => model.LogoLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasAttachments,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.HasAttachments, new { htmlAttributes = new { @class = "checkbox" } })
                @Html.ValidationMessageFor(model => model.HasAttachments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizationSystem,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.OrganizationSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizationSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsVisible,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.IsVisible, new { htmlAttributes = new { @class = "checkbox" } })
                @Html.ValidationMessageFor(model => model.IsVisible, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatalogCode,htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.CatalogCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CatalogCode, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (var i = 0; i < Model.Translations.Count; i++)
        {
            @Html.HiddenFor(model => model.Translations[i].LanguageCode)

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Title,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Description,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Provenience,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Provenience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Provenience, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].AdministrativeAndBiographicStory,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].AdministrativeAndBiographicStory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].AdministrativeAndBiographicStory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].FieldAndContents,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].FieldAndContents, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].FieldAndContents, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].Dimension,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].Dimension, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].Dimension, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Translations[i].CopyrightInfo,htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Translations[i].CopyrightInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translations[i].CopyrightInfo, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    </div>
}

@Html.Partial("_SubmitBackPartial")

