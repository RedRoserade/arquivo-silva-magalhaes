@model Specimen

@Html.HiddenFor(model => model.Id)

<div class="form-group">
    @Html.LabelFor(model => model.AuthorCatalogationCode, new { @class = "col-sm-2 control-label" })

    <div class="col-sm-10">
        @Html.TextBoxFor(model => model.AuthorCatalogationCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AuthorCatalogationCode, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ReferenceCode, new { @class = "col-sm-2 control-label" })

    <div class="col-sm-10">
        @Html.TextBoxFor(model => model.ReferenceCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ReferenceCode, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.HasMarksOrStamps, new { @class = "col-sm-2 control-label" })

    <div class="col-sm-10">
        @Html.CheckBoxFor(model => model.HasMarksOrStamps, new { @class = "checkbox" })
        @Html.ValidationMessageFor(model => model.HasMarksOrStamps, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.State, new { @class = "col-sm-2 control-label" })

    <div class="col-sm-10">
        @Html.EnumDropDownListFor(model => model.State, UiPrompts.ChooseOne, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Notes, new { @class = "col-sm-2 control-label" })

    <div class="col-sm-10">
        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>
</div>
